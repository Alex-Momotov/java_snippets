import java.io.OutputStream;
import java.util.*;
import java.util.function.Function;
import java.util.stream.Collectors;
import java.util.stream.Stream;
static class Cat {{
//**********************************************************************************************************************
//      Queue interface
// Implementations can be simple FIFO or priority queue.
// Implementations are LinkedList and PriorityQueue.

    Queue<Integer> q = new LinkedList<>();
    q.add(1);       // Adds element, if queue is full (capacity bounded queie) it throws exception.
    q.element();    // Show but do not remove element at the head of the queue. Exception thrown if queue is empty.
    q.remove();     // Removes element at the head of the queue. Exception thrown if queue is empty.

    q.offer(1);     // Inserts element to queue without throwing error. Returns true if element added, false otherwise.
    q.peek();       // Retrieves, but does not remove, the head of this queue, or returns null if this queue is empty.
    q.poll();       // Retrieves and removes the head of this queue, or returns null if this queue is empty.


//**********************************************************************************************************************





}}



























